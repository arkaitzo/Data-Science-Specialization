View(rank)
rank <- data.clean[
order(
data.clean[, "State"], # ... and alphabetically by state...
as.numeric(data.clean[, 3]), # by outcome...
data.clean[, "Hospital.Name"]), # ... and hospital
] # Return column #2 (Hospital.Name)
View(rank)
rank <- data.clean[
order(
data.clean[, "State"], # ... and alphabetically by state...
as.numeric(data.clean[, 3]), # by outcome...
data.clean[, "Hospital.Name"]), # ... and hospital
c(-3)] # Return column #2 (Hospital.Name)
View(rank)
View(rank)
split(rank, rank$State)
a <- split(rank, rank$State)
a[1]
a[[1]]
a[1,1]
a[1]
a[1][1]
rank
rm(a)
rank
View(rank)
View(rank)
View(rank)
outcome <- "pneumonia"
num <- "worst"
data <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
if(outcome %in% c("heart attack", "heart failure", "pneumonia")) {
if(outcome == "heart attack") {outcome.col <- 11}
else if(outcome == "heart failure") {outcome.col <- 17}
else {outcome.col <- 23}
data <- subset(data, select = c("Hospital.Name",
"State",
names(data)[outcome.col]))
} else {
stop("invalid outcome")
}
data.clean <-
data[data[, 3] != "Not Available", ]
subset(rank, rank[, outcome.col] == rank[nrow(rank), outcome.col])
rank
rank <- data.clean[
order(
data.clean[, "State"], # ... and alphabetically by state...
as.numeric(data.clean[, 3]), # by outcome...
data.clean[, "Hospital.Name"]), # ... and hospital
c(-3)] # Return columns #1 (Hospital.Name) and #2 (State)
rank
View(rank)
rank <- as.data.frame(data.clean[
order(
data.clean[, "State"], # ... and alphabetically by state...
as.numeric(data.clean[, 3]), # by outcome...
data.clean[, "Hospital.Name"]), # ... and hospital
c(-3)]) # Return columns #1 (Hospital.Name) and #2 (State)
View(rank)
str(rank)
name(rank)
names(rank)
names(rank) <- c("hospital", "state")
names(rank)
head(rank)
split(rank, rank$state)
split(rank, rank$state)[1]
split(rank, rank$state)[1]
split(rank, rank$state)[[1]]
split(rank, rank$state)[1,1]
split(rank, rank$state)[1][1]
a <- split(rank, rank$state)[1]
a
a <- split(rank, rank$state)
a
a1 <- a[1]
a1
lapply(rank, function(x) split(x, x$state))
lapply(rank, function(x) x[1])
lapply(rank, rank[1])
lapply(rank, function(x) x[1])
lapply(rank, function(x) x[[1]])
lapply(rank, function(x) subset(x, x$state))
subset(rank, rank$state)
head(rank)
rank <- as.data.frame(data.clean[
order(
data.clean[, "State"], # ... and alphabetically by state...
as.numeric(data.clean[, 3]), # by outcome...
data.clean[, "Hospital.Name"]), # ... and hospital
c(-3)]) # Return columns #1 (Hospital.Name) and #2 (State)
head(rank)
rank <- as.data.frame(data.clean[
order(
data.clean[, "State"], # ... and alphabetically by state...
as.numeric(data.clean[, 3]), # by outcome...
data.clean[, "Hospital.Name"]), # ... and hospital
c(-3)]) # Return columns #1 (Hospital.Name) and #2 (State)
names(rank) <- c("hospital", "state")
head(rank)
rank
rm(a,a1)
subset(rank, rank$state)
subset(rank, state)
as.vector(split(rank, rank$state))
as.vector(split(rank, rank$state))[1]
as.vector(split(rank, rank$state))[[1]]
as.vector(split(rank, rank$state))[1][1]
a <- as.vector(split(rank, rank$state))
a <- as.data.frame(split(rank, rank$state))
a <- as.array(split(rank, rank$state))
a
a[1]
a1 <- a[1]
a1
rank[1]
rank[1]
rank[[1]]
View(rank)
head(rank)
nrow(rank)
rank[1,]
split(rank, rank$state)[1,]
split(rank, rank$state)
split(rank, rank$state)[1][1,]
split(rank, rank$state)[1]
a <- split(rank, rank$state)[1]
a
a[1:10]
a[1:10,]
a[1,]
a[,1]
rank[1, ]
table(rank[1, ])
table(rank)
table(rank, rank$state)
table(rank)
rank
mylist <- list(rank, rank$state)
mylist
mylist[1]
mylist[1,]
mylist[1,2]
mylist <- split(rank, rank$state)
mylist$AK
mylist$AK[1]
mylist$AK[[1]]
ak <- as.data.frame(mylist$AK)
ak
ak[1]
ak[1,]
mylist <- as.data.frame(split(rank, rank$state))
mylist <- split(rank, rank$state)
mylist1 <- as.data.frame(mylist)
mylist <- split(rank, rank$state)
mylist1 <- as.data.frame(mylist)
mylist <- split(rank, rank$state)
ak <- as.data.frame(mylist)
ak <- as.vector(mylist)
ak
ak <- as.matrix(mylist)
ak <- as.matrix(mylist, 2,2)
ak <- as.data.frame(mylist)
levels(rank$s)
levels(rank$state)
levels(as.factor(rank$state))
ak <- as.data.frame(mylist, levels(as.factor(rank$state)))
mylist <- split(rank, levels(as.factor(rank$state)))
levels(as.factor(rank$state))
mylist <- split(rank, rank$state)
ak <- as.data.frame(mylist, levels(as.factor(rank$state)))
ok <- data.frame()
rank["TX"]
rank[rank$state == "TX"]
rank[rank$state == "TX"][1,]
rank[1, rank$state == "TX"]
levels(as.factor(rank$state))
rank[1, rank$state == "AK"]
rank[, rank$state == "AK"]
rank[, as.character(rank$state) == "AK"]
rank[1, 1]
rank[1, ]
rank[, rank$state]
rank[, rank$state == AK]
rank[, rank$state == "AK"]
rank[, rank$state == "AK"][,2]
rank[, rank$state == "AK"][1,2]
rank[, rank$state == "AK"][1,1]
rank[rank$state == "AK"]
rank[rank$state == "AK",]
rank[rank$state == "AK",][1,]
mylist <- split(rank, rank$state)
ok <- data.frame()
for(state in levels(as.factor(rank$state))) {
append(ok, rank[rank$state == state, ][1, ])
}
ok
state
rank[rank$state == state, ][1, ]
append(ok, rank[rank$state == state, ][1, ])
mylist <- split(rank, rank$state)
ok <- data.frame()
for(state in levels(as.factor(rank$state))) {
ok <- append(ok, rank[rank$state == state, ][1, ])
}
ok
rank[rank$state == state, ][1, 1]
ok <- data.frame()
for(state in levels(as.factor(rank$state))) {
ok[1, 1] <- rank[rank$state == state, ][1, 1]
ok[1, 2] <- rank[rank$state == state, ][1, 2]
}
levels(as.factor(rank$state))
mylist <- split(rank, rank$state)
ok <- data.frame()
for(state in levels(as.factor(rank$state))) {
print(state)
ok[1, 1] <- rank[rank$state == state, ][1, 1]
ok[1, 2] <- rank[rank$state == state, ][1, 2]
}
index = 0
ok <- data.frame()
index = 0
for(state in levels(as.factor(rank$state))) {
print(state)
ok[i, 1] <- rank[rank$state == state, ][1, 1]
ok[i, 2] <- rank[rank$state == state, ][1, 2]
index <- index +1
}
ok <- data.frame()
index = 0
for(state in levels(as.factor(rank$state))) {
print(state)
ok[index, 1] <- rank[rank$state == state, ][1, 1]
ok[index, 2] <- rank[rank$state == state, ][1, 2]
index <- index +1
}
ok <- data.frame()
index = 0
for(state in levels(as.factor(rank$state))) {
print(state)
ok[index, 1] <- rank[rank$state == state, ][1, 1]
ok[index, 2] <- rank[rank$state == state, ][1, 2]
index <- index +1
}
print(state)
rank[rank$state == state, ][1, 1]
rank[rank$state == state, ][1, 2]
ok <- data.frame()
index = 1
for(state in levels(as.factor(rank$state))) {
print(state)
ok[index, 1] <- rank[rank$state == state, ][1, 1]
ok[index, 2] <- rank[rank$state == state, ][1, 2]
index <- index +1
}
mylist <- split(rank, rank$state)
ok <- data.frame()
index = 1
for(state in levels(as.factor(rank$state))) {
ok[index, 1] <- rank[rank$state == state, ][1, 1]
ok[index, 2] <- rank[rank$state == state, ][1, 2]
index <- index +1
}
ok
rank <- as.data.frame(data.clean[
order(
data.clean[, "State"], # ... and alphabetically by state...
as.numeric(data.clean[, 3]), # by outcome...
data.clean[, "Hospital.Name"]), # ... and hospital
c(-3)]) # Return columns #1 (Hospital.Name) and #2 (State)
head(rank)
ok <- data.frame()
names(ok) <- c("hospital", "state")
index = 1
for(state in levels(as.factor(rank$state))) {
ok$hospital[index] <- rank[rank$Hospital.Name == state, ][1, 1]
ok$state[index] <- rank[rank$State == state, ][1, 2]
index <- index +1
}
mylist <- split(rank, rank$state)
ok <- as.data.frame( matrix(ncol = 2) )
names(ok) <- c("hospital", "state")
index = 1
for(state in levels(as.factor(rank$state))) {
ok$hospital[index] <- rank[rank$Hospital.Name == state, ][1, 1]
ok$state[index] <- rank[rank$State == state, ][1, 2]
index <- index +1
}
View(ok)
rank[rank$Hospital.Name == state, ][1, 1]
View(rank)
rank[rank$Hospital.Name, ][1, 1]
rank[rank$Hospital.Name, ]
View(rank)
rank[rank$State == state, ]
head(rank)
rank[1,]
rank[rank$State == state, ][1,]
rank[rank$State == state, ]
rank$State
rank[rank$State == "AK"]
rank[,rank$State == "AK"]
rank[rank$State == "AK",]
rank[rank$State == "AK",][1,]
mylist <- split(rank, rank$state)
ok <- as.data.frame( matrix(ncol = 2) )
names(ok) <- c("hospital", "state")
index = 1
for(state in levels(as.factor(rank$state))) {
ok[index] <- rank[rank$State == "AK",][1,]
index <- index +1
}
mylist <- split(rank, rank$state)
ok <- as.data.frame( matrix(ncol = 2) )
mylist <- split(rank, rank$state)
mylist <- split(rank, rank$State)
ok <- as.data.frame( matrix(ncol = 2) )
names(ok) <- c("hospital", "state")
index = 1
for(state in levels(as.factor(rank$state))) {
ok[index] <- rank[rank$State == "AK",][1,]
index <- index +1
}
ok
rank[rank$State == "AK",][1,]
index
mylist <- split(rank, rank$State)
ok <- as.data.frame( matrix(ncol = 2) )
names(ok) <- c("hospital", "state")
index = 1
for(state in levels(as.factor(rank$state))) {
ok[index] <- rank[rank$State == state,][1,]
index <- index +1
}
ok
state
for(state in levels(as.factor(rank$State))) {
ok[index] <- rank[rank$State == state,][1,]
index <- index + 1
}
ok
View(ok)
for(state in levels(as.factor(rank$State))) {
ok[index,] <- rank[rank$State == state,][1,]
index <- index + 1
}
ok
View(ok)
rank[rank$State == state,][1,]
ok[index,]
rank[rank$State == state,][1, ]
ok <- rank[rank$State == state,][1, ]
ok[1, ] <- rank[rank$State == state,][1, ]
ok[2, ] <- rank[rank$State == state,][1, ]
View(ok)
ok[3, ] <- rank[rank$State == state,][1, ]
ok <- as.data.frame( matrix(ncol = 2) )
names(ok) <- c("hospital", "state")
ok[3, ] <- rank[rank$State == state,][1, ]
View(ok)
ok[1, ] <- rank[rank$State == state,][1, ]
ok[2, ] <- rank[rank$State == state,][1, ]
View(ok)
levels(as.factor(rank$State))
mylist <- split(rank, rank$State)
ok <- as.data.frame( matrix(ncol = 2) )
names(ok) <- c("hospital", "state")
index = 1
for(state in levels(as.factor(rank$State))) {
print(index)
ok[index, ] <- rank[rank$State == state,][1, ]
index <- index + 1
}
View(ok)
outcome <- "pneumonia"
num <- "worst"
data <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
if(outcome %in% c("heart attack", "heart failure", "pneumonia")) {
if(outcome == "heart attack") {outcome.col <- 11}
else if(outcome == "heart failure") {outcome.col <- 17}
else {outcome.col <- 23}
data <- subset(data, select = c("Hospital.Name",
"State",
names(data)[outcome.col]))
} else {
stop("invalid outcome")
}
data.clean <-
data[data[, 3] != "Not Available", ]
ordered.rank <- as.data.frame(data.clean[
order(
data.clean[, "State"], # ... and alphabetically by state...
as.numeric(data.clean[, 3]), # by outcome...
data.clean[, "Hospital.Name"]), # ... and hospital
c(-3)]) # Return columns #1 (Hospital.Name) and #2 (State)
rank <- as.data.frame( matrix(ncol = 2) )
rank <- as.data.frame( matrix(ncol = 2) )
names(rank) <- c("hospital", "state")
index = 1
for(state in levels(as.factor(ordered.rank$State))) {
print(index)
rank[index, ] <- ordered.rank[ordered.rank$State == state,][1, ]
index <- index + 1
}
View(rank)
ordered.rank
ordered.rank[ordered.rank$State == state,]
state
ordered.rank[ordered.rank$State == state, ]
length(ordered.rank[ordered.rank$State == state, ])
length(ordered.rank[ordered.rank$State == state, ])
ordered.rank[ordered.rank$State == state, ]
nrow(ordered.rank[ordered.rank$State == state, ])
nrow(ordered.rank[ordered.rank$State == state, ])
#####################################
# 4.Ranking hospitals in all states #
#####################################
rankall <- function(outcome, num = "best") {
outcome <- "pneumonia"
num <- "worst"
## Read outcome data
data <- read.csv("ProgAssignment3-data/outcome-of-care-measures.csv",
colClasses = "character")
## Check that state and outcome are valid
if(outcome %in% c("heart attack", "heart failure", "pneumonia")) {
if(outcome == "heart attack") {outcome.col <- 11}
else if(outcome == "heart failure") {outcome.col <- 17}
else {outcome.col <- 23}
data <- subset(data, select = c("Hospital.Name",
"State",
names(data)[outcome.col]))
} else {
stop("invalid outcome")
}
# Remove NAs
data.clean <-
data[data[, 3] != "Not Available", ]
# Sort by rate (outcome) first and then alphabetically by state and hospital
ordered.rank <- as.data.frame(data.clean[
order(
data.clean[, "State"], # ... and alphabetically by state...
as.numeric(data.clean[, 3]), # by outcome...
data.clean[, "Hospital.Name"]), # ... and hospital
c(-3)]) # Return columns #1 (Hospital.Name) and #2 (State)
rank <- as.data.frame( matrix(ncol = 2) )
names(rank) <- c("hospital", "state")
index = 1
if(num == "best") {
for(state in levels(as.factor(ordered.rank$State))) {
position <- 1
rank[index, ] <-
ordered.rank[ordered.rank$State == state, ][position, ]
index <- index + 1
}
}
else if(num == "worst") {
for(state in levels(as.factor(ordered.rank$State))) {
position <- nrow(ordered.rank[ordered.rank$State == state, ])
rank[index, ] <-
ordered.rank[ordered.rank$State == state, ][position, ]
index <- index + 1
}
}
else {
for(state in levels(as.factor(ordered.rank$State))) {
position <- num
rank[index, ] <-
ordered.rank[ordered.rank$State == state, ][position, ]
index <- index + 1
}
}
## Return hospital name in that state with the given rank 30-day death rate
return(rank)
}
source("rankall.R")
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure", "worst"), 3)
tail(rankall("heart failure"), 3)
tail(rankall("heart failure"), 10)
tail(rankall("heart failure", num = 1), 10)
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
head(rankall("heart failure"), 10)
tail(rankall("heart failure"), 10)
source("rankall.R")
source("rankhospital.R")
source("best.R")
best("SC", "heart attack")
best("NY", "pneumonia")
best("AK", "pneumonia")
rankhospital("NC", "heart attack", "worst")
rankhospital("WA", "heart attack", 7)
rankhospital("TX", "pneumonia", 10)
rankhospital("NY", "heart attack", 7)
r <- rankall("heart attack", 4)
r
as.character(subset(r, state == "HI")$hospital)
as.character(subset(r, state == "HI")$hospital)
as.character(subset(r, state == "HI")$state)
subset(r, state == "HI")
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
q()
